<!--
 NEW BOX (bottom_box)(under base_link): .195 .195 0.09
 Camera: 0.05 0.05 0.05 box below the bottom_box
 LEGS: z: 0.1 0.05 0.250


-->
<?xml version="1.0"?>
<robot name="pauvsi_m7_robot">

	<!-- colors -->

	<material name="green">
		<color rgba="0.05 0.9 0.05 1" />
	</material>

	<material name="blue">
		<color rgba="0.01 0.01 0.9 1" />
	</material>

	<material name="red">
		<color rgba="0.9 0.01 0.01 1" />
	</material>

	<material name="gray">
		<color rgba="0.6 0.6 0.6 1" />
	</material>

	<material name="black">
		<color rgba="0.05 0.05 0.05 1" />
	</material>

	<material name="white">
		<color rgba="0.9 0.9 0.9 1" />
	</material>

	<material name="carbon">
		<color rgba="0.2 0.2 0.2 1" />
	</material>

	<link name="base_link">
			<collision>
			<geometry>
				<box size="0.25 0.25 0.07"/>
				</geometry>
			</collision>
		<visual>
		   <origin xyz="0 0 0" rpy="1.570796 0 0.7853981" />
			<geometry>
			   <mesh filename="package://m7_master/mesh/m7v3-assembly_centered.stl" scale="0.001 0.001 0.001" />

			</geometry>
			<material name="carbon" />
		</visual>

		<!-- this is the only actual inertia calculation other than the arm-->
		<inertial>
			<mass value="5"/>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<inertia ixx="0.75" ixy="0" ixz="0" iyy="0.75" iyz="0" izz="0.75" />
		</inertial>

	</link>
	
	<gazebo>
  		<plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
    		<alwaysOn>true</alwaysOn>
    		<updateRate>100</updateRate>
    		<bodyName>base_link</bodyName>
    		<topicName>ground_truth/state</topicName>
    		<gaussianNoise>0.01</gaussianNoise>
    		<frameName>world</frameName>
    		<xyzOffsets>0 0 0</xyzOffsets>
    		<rpyOffsets>0 0 0</rpyOffsets>
  		</plugin>
	</gazebo>
	
	<link name="bottom_box">
	<collision>
	<geometry>
				<box size="0.195 0.215 0.09" />
				</geometry>
			</collision>
		

		<!--filler inertia no effect-->
		<inertial>
     		 	<mass value="1e-9" />
      			<origin xyz="0 0 0" rpy="0 0 0"/>
      			<inertia ixx="1e-9" ixy="0" ixz="0" iyy="1e-9" iyz="0" izz="1e-9" />
    		</inertial>
	</link>
	
	<joint name="base_to_bottom" type="fixed">
		<parent link="base_link" />
		<child link="bottom_box" />
		<origin xyz="0 0.02 -0.09" />
	</joint>	

	<!-- LIDAR -->
	<link name="lidar">
	<collision>
	<geometry>
		<box size="0.05 0.05 0.05" />
		
	</geometry>
	</collision>
	</link>
	<joint name="base_to_lidar" type="fixed">
		<parent link="base_link" />
		<child link="lidar"/>
		<origin xyz="0.023 0.076 0.081" rpy="0 0 3.14159" />
	</joint>
	
  	<gazebo reference="lidar">
		<sensor type="ray" name="lidar_sensor">
		<update_rate>6.5</update_rate>
		<ray>
			<scan>
				<horizontal>
					<samples>360</samples>
					<min_angle>-3.14159</min_angle>
					<max_angle>3.14159</max_angle>
				</horizontal>
			</scan>
			<range>
				<min>0.1</min>
				<max>6.0</max>
				<resolution>0.002</resolution>
			</range>
		</ray>
		<plugin name="lidar_controller" filename="libgazebo_ros_laser.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>6.5</updateRate>
			<topicName>laser/scan</topicName>
			<frameName>base_link</frameName>
		</plugin>
		</sensor>
	</gazebo>
	
	<!-- IMU -->
	<link name="imu_link">
	<collision>
	<geometry>
		<box size="0.005 0.005 0.001"/>
	</geometry>
	</collision>
	</link>

	<joint name="base_to_imu" type="fixed">
		<parent link="base_link" />
		<child link="imu_link" />
		<origin xyz="-0.07 0.048 0.045" rpy="0 0 1.57079632679" />
	</joint>

	<gazebo>

	     <plugin name="pauvsi_m7_robot_imu" filename="libhector_gazebo_ros_imu.so">
            <updateRate>100.0</updateRate>
            <bodyName>imu_link</bodyName>
            <frameId>imu_link</frameId>
            <topicName>imu/measurement</topicName>
            <rpyOffset>0 0 0</rpyOffset> 
            <gaussianNoise>0</gaussianNoise>  
            <accelDrift>0.5 0.5 0.5</accelDrift>
            <accelGaussianNoise>0.35 0.35 0.3</accelGaussianNoise>
            <rateDrift>0.1 0.1 0.1</rateDrift>
            <rateGaussianNoise>0.05 0.05 0.015</rateGaussianNoise>
          </plugin>
     </gazebo>

	<!-- BOTTOM Camera -->
	
	<link name="bottom_camera">
	<collision>
	<geometry>
				<box size="0.05 0.05 0.15" />
				</geometry>
			</collision>
		

	</link>
	
	<joint name="base_to_bottom_camera" type="fixed">
		<parent link="base_link" />
		<child link="bottom_camera" />
		<origin xyz="0.054 -0.029 -0.13" rpy="0 3.14159265359 1.57079632679"/>
	</joint>

	<joint name="bottom_camera_optical_link" type="fixed">
		<origin xyz="0 0 0" rpy=" 0 -1.57079632679 1.57079632679" />
		<parent link="bottom_camera" />
		<child link="bottom_camera_optical_frame" />
	</joint>
	<link name="bottom_camera_optical_frame"/>
	
	<!-- camera -->
  <gazebo reference="bottom_camera_optical_frame">
    <sensor type="camera" name="bottom_camera">
      <update_rate>50.0</update_rate>
      <camera name="bottom_camera">
        <horizontal_fov>1.91986</horizontal_fov>
        <image>
          <width>1280</width>
          <height>1024</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.001</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>bottom_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>bottom_camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


	


	<!-- FRONT Camera -->
	
	<link name="front_camera">
	<collision>
	<geometry>
				<box size="0.05 0.05 0.15" />
				</geometry>
			</collision>
		

	</link>
	
	<joint name="base_to_front_camera" type="fixed">
		<parent link="base_link" />
		<child link="front_camera" />
		<origin xyz="0 0.142 0" rpy="-1.57079632679 0 0"/>
	</joint>
	
	<joint name="front_camera_optical_link" type="fixed">
		<origin xyz="0 0 0" rpy=" 0 -1.57079632679  1.57079632679" />
		<parent link="front_camera" />
		<child link="front_camera_optical_frame" />
	</joint>
	<link name="front_camera_optical_frame"/>
	
	<!-- camera -->
  <gazebo reference="front_camera_optical_frame">
    <sensor type="camera" name="front_camera">
      <update_rate>10.0</update_rate>
      <camera name="front_camera">
        <horizontal_fov>2.1</horizontal_fov>
        <image>
          <width>1288</width>
          <height>964</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.001</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>front_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>front_camera_optical_frame</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

	<!-- RIGHT Camera -->
	
	<link name="right_camera">
	<collision>
	<geometry>
				<box size="0.05 0.05 0.15" />
				</geometry>
			</collision>
		

	</link>
	
	<joint name="base_to_right_camera" type="fixed">
		<parent link="base_link" />
		<child link="right_camera" />
		<origin xyz="0.142 0 0" rpy="-1.57079632679 0 -1.57079632679"/>
	</joint>

	<joint name="right_camera_optical_link" type="fixed">
		<origin xyz="0 0 0" rpy=" 0 -1.57079632679 1.57079632679" />
		<parent link="right_camera" />
		<child link="right_camera_optical_frame" />
	</joint>
	<link name="right_camera_optical_frame"/>
	
<!-- camera -->
  <gazebo reference="right_camera_optical_frame">
    <sensor type="camera" name="right_camera">
      <update_rate>10.0</update_rate>
      <camera name="right_camera">
        <horizontal_fov>2.1</horizontal_fov>
        <image>
          <width>1288</width>
          <height>964</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.001</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>right_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>right_camera_optical_frame</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
	
	<!-- BACK Camera -->
	
	<link name="back_camera">
	<collision>
	<geometry>
				<box size="0.05 0.05 0.15" />
				</geometry>
			</collision>
		
	</link>
	
	<joint name="base_to_back_camera" type="fixed">
		<parent link="base_link" />
		<child link="back_camera" />
		<origin xyz="0 -0.142 0" rpy="1.57079632679 3.14159265359 0"/>
	</joint>

	<joint name="back_camera_optical_link" type="fixed">
		<origin xyz="0 0 0" rpy=" 0 -1.57079632679 1.57079632679" />
		<parent link="back_camera" />
		<child link="back_camera_optical_frame" />
	</joint>
	<link name="back_camera_optical_frame"/>
	
<!-- camera -->
  <gazebo reference="back_camera_optical_frame">
    <sensor type="camera" name="back_camera">
      <update_rate>10.0</update_rate>
      <camera name="back_camera">
        <horizontal_fov>2.1</horizontal_fov>
        <image>
          <width>1288</width>
          <height>964</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.001</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>back_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>back_camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


	<!-- LEFT Camera -->
	
	<link name="left_camera">
	<collision>
	<geometry>
				<box size="0.05 0.05 0.15" />
				</geometry>
			</collision>
		
	</link>
	
	<joint name="base_to_left_camera" type="fixed">
		<parent link="base_link" />
		<child link="left_camera" />
		<origin xyz="-0.142 0 0" rpy="1.57079632679 3.14159265359 -1.57079632679"/>
	</joint>

	<joint name="left_camera_optical_link" type="fixed">
		<origin xyz="0 0 0" rpy=" 0 -1.57079632679 1.57079632679" />
		<parent link="left_camera" />
		<child link="left_camera_optical_frame" />
	</joint>
	<link name="left_camera_optical_frame"/>
	

	<!-- camera -->
  <gazebo reference="left_camera_optical_frame">
    <sensor type="camera" name="left_camera">
      <update_rate>10.0</update_rate>
	<visualize> true </visualize>
      <camera name="left_camera">
        <horizontal_fov>2.1</horizontal_fov>
        <image>
          <width>1288</width>
          <height>964</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.001</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>left_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>left_camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
	<distortion>
	<center>0.5 0.5</center>
	</distortion>
      </plugin>
    </sensor>
  </gazebo>

	
	<!-- Arbotix -->
	
	<link name = "arbotix">
	<collision>
	<geometry>
				<box size="0.06 0.06 0.02" />
				</geometry>
			</collision>
		
	</link>
	
	<joint name="bottom_to_arbotix" type="fixed">
		<parent link="bottom_box" />
		<child link="arbotix" />
		<origin xyz="0.048 0.0343 -0.055" />	
	</joint>
	
	<!-- Antenna -->
	
	<link name ="antenna">
	<collision>
	<geometry>
				<box size="0.06 0.06 0.07" />
				</geometry>
			</collision>
		
	</link>
	 
	<joint name="bottom_to_antenna" type="fixed">
		<parent link="bottom_box" />
		<child link="antenna" />
		<origin xyz="0.038 0.0943 -0.08" />
	</joint>
	
	<!-- ARMS -->
	
	<link name="arm1_link">
	<collision>
	<geometry>
				<cylinder length="0.334" radius="0.036"/>
				</geometry>
				<origin rpy="0 1.57075 0.7853981" xyz="0 0 0"/>
			</collision>
		
	</link>
	
	<joint name="base_to_arm1" type="fixed">
		<parent link="base_link"/>
		<child link="arm1_link"/>
		<origin xyz="0.18 0.18 0"/>
	</joint>
	
	<link name="arm2_link">
	<collision>
	<geometry>
				<cylinder length="0.334" radius="0.036"/>
				</geometry>
				<origin rpy="0 1.57075 2.3561481" xyz="0 0 0"/>
			</collision>
		
	</link>
	
	<joint name="base_to_arm2" type="fixed">
		<parent link="base_link"/>
		<child link="arm2_link"/>
		<origin xyz="0.18 -0.18 0"/>
	</joint>
	
	<link name="arm3_link">
	<collision>
	<geometry>
				<cylinder length="0.334" radius="0.036"/>
				</geometry>
				<origin rpy="0 1.57075 -2.3561481" xyz="0 0 0"/>
			</collision>
		
	</link>
	
	<joint name="base_to_arm3" type="fixed">
		<parent link="base_link"/>
		<child link="arm3_link"/>
		<origin xyz="-0.18 -0.18 0"/>
	</joint>
	
	<link name="arm4_link">
	<collision>
	<geometry>
				<cylinder length="0.334" radius="0.036"/>
				</geometry>
				<origin rpy="0 1.57075 2.3561481" xyz="0 0 0"/>
			</collision>
	
	</link>
	
	<joint name="base_to_arm4" type="fixed">
		<parent link="base_link"/>
		<child link="arm4_link"/>
		<origin xyz="-0.18 0.18 0"/>
	</joint>
	
	<!--LEGS-->
	
	<link name="leg1_link">
	<collision>
	<geometry>
				<box size="0.165 0.05 0.250" />
				</geometry>
				<origin xyz="0 0 -0.25" />
			</collision>
		
	</link>
	
	<joint name="arm_to_leg1" type="fixed">
		<parent link="base_link" />
		<child  link="leg1_link" />
		<origin rpy="0 0 0.7854 " xyz="0.272885 0.272885 0.1" />
	</joint>
	
	<link name="leg2_link">
	<collision>
	<geometry>
				<box size="0.165 0.05 0.250" />
				</geometry>
				<origin xyz="0 0 -0.25" />
			</collision>
		
	</link>
	
	<joint name="arm_to_leg2" type="fixed">
		<parent link="base_link" />
		<child  link="leg2_link" />
		<origin rpy="0 0 2.3562 " xyz="0.272885 -0.272885 0.1" />
	</joint>
	
	<link name="leg3_link">
	<collision>
	<geometry>
				<box size="0.165 0.05 0.250" />
				</geometry>
				<origin xyz="0 0 -0.25" />
			</collision>
		
	</link>
	
	<joint name="arm_to_leg3" type="fixed">
		<parent link="base_link" />
		<child  link="leg3_link" />
		<origin rpy="0 0 0.7854" xyz="-0.272885 -0.272885 0.1" />
	</joint>
				
	<link name="leg4_link">
	<collision>
	<geometry>
				<box size="0.165 0.05 0.250" />
				</geometry>
				<origin xyz="0 0 -0.25" />
			</collision>
		
	</link>
	
	<joint name="arm_to_leg4" type="fixed">
		<parent link="base_link" />
		<child  link="leg4_link" />
		<origin rpy="0 0 2.3562 " xyz="-0.272885 0.272885 0.1" />
	</joint>		
	
	<!-- ARM -->
	<!-- Change link origin for point of rotation of servo -->
	<!-- servo1 -->	
	<link name="servo_1">
    <inertial>
      <origin xyz="0.0 0 0" /> 
      <mass value="1.0" />
      <inertia  ixx="1.0" ixy="0"  ixz="0"  iyy="1.0"  iyz="0"  izz="1.0" />
    </inertial>
		<collision>
			<geometry>
				<box size="0.0316 0.0430 0.048224" />
			</geometry>
		</collision>
	
	<visual>
	   <origin xyz="0 0 0" rpy="0 0 0" />
		<geometry>
		   <box size="0.0316 0.0430 0.048224" />
	
		</geometry>
		<material name="red" />
	</visual>
		
	</link>
	
	<joint name="bottom_to_servo1" type="fixed">
		<origin xyz="-0.112 -0.07 0.005" />
	    <parent link="bottom_box"/>
		<child link="servo_1" />
	</joint>

<!-- 
	<joint name="bottom_to_servo1" type="revolute">
	    <limit effort="1000.0" lower="-1.57079632679" upper="1.57079632679" velocity="0.5"/>		
		<origin xyz="-0.112 -0.07 0.005" />
		<axis xyz="1 0 0" />
	    <parent link="bottom_box"/>
		<child link="servo_1" />
	</joint>
-->
	<!-- bone1 -->
	<link name="bone_1">
	<origin xyz="0.0 0 -0.0675136" />
	 
	<inertial>  
      <mass value="1.0" />
      <inertia  ixx="1.0" ixy="0"  ixz="0"  iyy="1.0"  iyz="0"  izz="1.0" />
    </inertial>
		<collision>
			<geometry>
				<box size="0.025 0.03 0.1350272" />
			</geometry>
		</collision>
	
	<visual>
	   <origin xyz="0 0 -0.0675136" rpy="0 0 0" />
		<geometry>
		   <box size="0.025 0.03 0.1350272" />
	
		</geometry>
		<material name="gray" />
	</visual>		
	</link>
	
	<joint name="servo1_to_bone1" type="fixed">
		<origin xyz="0 0 -0.028832" />
		<parent link="servo_1" />
		<child link="bone_1" />
	</joint>
	
	<!--  servo2 -->
 	<link name="servo_2">
      <origin xyz="0.0 0 -0.013312" /> 
	<inertial>
      <mass value="1.0" />
      <inertia  ixx="1.0" ixy="0"  ixz="0"  iyy="1.0"  iyz="0"  izz="1.0" />
    </inertial>
		<collision>
			<geometry>
				<box size="0.0316 0.0430 0.048224" />
			</geometry>
		</collision>
	
	<visual>
	   <origin xyz="0 0 -0.013312" rpy="0 0 0" />
		<geometry>
		   <box size="0.0316 0.0430 0.048224" />
	
		</geometry>
		<material name="red" />
	</visual>		
	</link>
	
	<joint name="bone1_to_servo2" type="fixed">
		<origin xyz="0 0  -0.1578272" />
		<parent link="bone_1" />
		<child link="servo_2" />
	</joint>

	<!--  servo3 rotates -->
 	<link name="servo_3">
      <origin xyz="0.0 0 -0.013312" /> 
	<inertial>
      <mass value="1.0" />
      <inertia  ixx="1.0" ixy="0"  ixz="0"  iyy="1.0"  iyz="0"  izz="1.0" />
    </inertial>
		<collision>
			<geometry>
				<box size="0.0316 0.0430 0.048224" />
			</geometry>
		</collision>
	
	<visual>
	   <origin xyz="0 0 -0.013312" rpy="0 0 0" />
		<geometry>
		   <box size="0.0316 0.0430 0.048224" />
	
		</geometry>
		<material name="red" />
	</visual>		
	</link>
	
	<joint name="servo2_to_servo3" type="fixed">
		<origin xyz="0 0 -0.070724" />
		<parent link="servo_2" />
		<child link="servo_3" />
	</joint>
	
	<!-- bone2 -->
	<link name="bone_2">
		<origin xyz="0.0 0 -0.08062" />
	 
	<inertial>  
      <mass value="1.0" />
      <inertia  ixx="1.0" ixy="0"  ixz="0"  iyy="1.0"  iyz="0"  izz="1.0" />
    </inertial>
		<collision>
			<geometry>
				<box size="0.025 0.03 0.16124" />
			</geometry>
		</collision>
	
	<visual>
	   <origin xyz="0 0 -0.08062" rpy="0 0 0" />
		<geometry>
		   <box size="0.025 0.03 0.16124" />
	
		</geometry>
		<material name="gray" />
	</visual>
	</link>
	
	<joint name="servo3_to_bone2" type="fixed">
		<origin xyz="0 0 -0.042144" />
		<parent link="servo_3" />
		<child link="bone_2" />
	</joint>
	
	<!--  servo4 -->
	<link name="servo_4">
      <origin xyz="0.0 0 -0.024112" /> 
	<inertial>
      <mass value="1.0" />
      <inertia  ixx="1.0" ixy="0"  ixz="0"  iyy="1.0"  iyz="0"  izz="1.0" />
    </inertial>
		<collision>
			<geometry>
				<box size="0.0316 0.0430 0.048224" />
			</geometry>
		</collision>
	
	<visual>
	   <origin xyz="0 0 -0.024112" rpy="0 0 0" />
		<geometry>
		   <box size="0.0316 0.0430 0.048224" />
	
		</geometry>
		<material name="red" />
	</visual>		
	</link>
	
	<joint name="bone2_to_servo4" type="fixed">
		<origin xyz="0 0 -0.16596"/>
		<parent link="bone_2" />
		<child link="servo_4" />
	</joint>
	
		<!-- bone3 -->
	<link name="bone_3">
		<origin xyz="0.0 0 -0.051035" />
	 
	<inertial>  
      <mass value="1.0" />
      <inertia  ixx="1.0" ixy="0"  ixz="0"  iyy="1.0"  iyz="0"  izz="1.0" />
    </inertial>
		<collision>
			<geometry>
				<box size="0.025 0.03 0.10207" />
			</geometry>
		</collision>
	
	<visual>
	   <origin xyz="0 0 -0.051035" rpy="0 0 0" />
		<geometry>
		   <box size="0.025 0.03 0.10207" />
	
		</geometry>
		<material name="gray" />
	</visual>
	</link>
	
	<joint name="servo4_to_bone3" type="fixed">
		<origin xyz="0 0 -0.070724" />
		<parent link="servo_4" />
		<child link="bone_3" />
	</joint>
	
	<!-- servo5 -->
		<link name="servo_5">
      <origin xyz="0.0 0 0.013312" /> 
	<inertial>
      <mass value="1.0" />
      <inertia  ixx="1.0" ixy="0"  ixz="0"  iyy="1.0"  iyz="0"  izz="1.0" />
    </inertial>
		<collision>
			<geometry>
				<box size="0.0316 0.0430 0.048224" />
			</geometry>
		</collision>
	
	<visual>
	   <origin xyz="0 0 0.013312" rpy="0 0 0" />
		<geometry>
		   <box size="0.0316 0.0430 0.048224" />
	
		</geometry>
		<material name="red" />
	</visual>		
	</link>
	
	<joint name="bone3_to_servo5" type="fixed">
		<origin xyz="0 0 -0.144194"/>
		<parent link="bone_3" />
		<child link="servo_5" />
	</joint>
<!-- 	
	
	<joint name="bone3_to_servo5" type="fixed">
		<origin xyz="0 0 -0.161994"/>
		<parent link="bone_3" />
		<child link="servo_5" />
	</joint>
	
-->	
<!-- 
	<joint name="bottom_to_servo_one" type="revolute">
		<parent link="base_link" />
		<child link="servo_one" />
		<origin xyz="0 0.5 0" rpy="0 0 0"/>
		
		<axis xyz="0 1 0" />
		<limit lower="-1.57079632679" upper="1.57079632679" effort="30.0" velocity="2.0" />
	</joint>
-->
	
	<!-- MOTORS -->
	
	<link name="motor1_link">
	<collision>
	<geometry>
				<cylinder length="0.01" radius="0.2286" />
				</geometry>
			</collision>
		
	</link>
	<joint name="motor1_to_arm1" type="fixed" >
		<parent link="base_link"/>
		<child link="motor1_link"/>
		<origin xyz="0.282885 0.282885 0.06"/>
	</joint>
	
	<link name="motor2_link">
	<collision>
	<geometry>
				<cylinder length="0.01" radius="0.2286" />
				</geometry>
			</collision>
		
	</link>
	<joint name="motor2_to_arm2" type="fixed" >
		<parent link="base_link"/>
		<child link="motor2_link"/>
		<origin xyz="0.282885 -0.282885 0.06"/>
	</joint>
	
	<link name="motor3_link">
	<collision>
	<geometry>
				<cylinder length="0.01" radius="0.2286" />
				</geometry>
			</collision>
		
	</link>
	<joint name="motor3_to_arm3" type="fixed" >
		<parent link="base_link"/>
		<child link="motor3_link"/>
		<origin xyz="-0.282885 -0.282885 0.06"/>
	</joint>
	
	<link name="motor4_link">
	<collision>
	<geometry>
				<cylinder length="0.01" radius="0.2286" />
				</geometry>
			</collision>
		
	</link>
	<joint name="motor4_to_arm4" type="fixed" >
		<parent link="base_link"/>
		<child link="motor4_link"/>
		<origin xyz="-0.282885 0.282885 0.06"/>
	</joint>
	
</robot>
